# improve colors
set -g default-terminal 'screen-256color'

run-shell "powerline-daemon -q"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Control-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# status bar
# set-option -g status-utf8 on
# set -g status-bg blue
# set-option -g status-justify centre
#set-option -g status-justify left
# set-option -g status-bg colour55
# set-option -g status-fg white
#set-option -g status-left-length 40
#set-option -g status-right-length 80
set-option -g history-limit 50000
#setw -g window-status-bg black
#setw -g window-status-current-fg green
#setw -g window-status-bell-attr default
#setw -g window-status-bell-fg red
# setw -g window-status-content-attr default
# setw -g window-status-content-fg yellow
# setw -g window-status-activity-attr default
# setw -g window-status-activity-fg yellow

# set -g status-left '#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'

# set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'

set -g status-interval 5
# set -g status-right '#[fg=green]][#[fg=white] #(tmux-mem-cpu-load 5 4) #[fg=green]][ #[fg=yellow]%H:%M#[default]'


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-yank'

# Control-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allow for faster key repetition
set -s escape-time 0

# Resize the damn window
setw -g aggressive-resize on

# Mouse support ------------------------------------------------
set -g mouse on

bind-key -T copy-mode-vi WheelUpPane send -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -X scroll-down

# # Vi copypaste
setw -g mode-keys vi
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display-message "highlighted selection copied to system clipboard"

# End Mouse support --------------------------------------------

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"

# auto window rename
set-window-option -g automatic-rename

# mouse detection
#set -g mouse-utf8 on
set-option -g mouse on
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#set-option -g mouse-resize-pane on

# set-window-option -g mode-mouse on

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# pane colors
set -g pane-active-border-bg black
set -g pane-border-bg black
set -g pane-active-border-fg blue
set -g pane-border-fg white

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

run '~/.tmux/plugins/tpm/tpm'

# Load Powerline
source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
